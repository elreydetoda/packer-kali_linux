---
- name: Bootstrap build servers
  hosts: all
  become: true
  tasks:

    - name: Installation of software
      block:

        - name: Installing hypervisors
          block:

            - name: Installation of virtualbox
              ansible.builtin.include_role:
                name: elreydetoda.virtualization.virtualbox
              # when:
              #   - '"tag_virtualbox_iso" in hostvars[inventory_hostname]["group_names"]'

            - name: Installation of vmware workstation
              ansible.builtin.import_role:
                name: elreydetoda.virtualization.vmware
              vars:
                vmware_bundle_checksum: ''
                vmware_license_key: '{{ vmware_license | default() }}'

            - name: Installation of kvm
              ansible.builtin.import_role:
                name: elreydetoda.virtualization.kvm

        - name: Installing building software
          block:

            - name: Installation of packer
              ansible.builtin.include_role:
                name: elreydetoda.virtualization.packer

            - name: Install vagrant
              ansible.builtin.include_role:
                name: elreydetoda.virtualization.vagrant

    - name: Ufw setup
      block:

        - name: Install ufw
          ansible.builtin.package:
            name: ufw
            state: present

        - name: Adding ssh to allow
          community.general.ufw:
            # rule: limit
            # setting it to this for now
            rule: allow
            name: OpenSSH

        - name: Adding vmware access through ufw
          community.general.ufw:
            # rule: limit
            # setting it to this for now
            rule: allow
            proto: any
            direction: 'in'
            interface: 'vmnet8'
            comment: 'for vmware builder'

        - name: Adding vmware access through ufw
          community.general.ufw:
            # rule: limit
            # setting it to this for now
            rule: allow
            proto: any
            direction: 'in'
            interface: 'virbr0'
            comment: 'for libvirt builder'

        - name: Enabling ufw
          community.general.ufw:
            state: enabled

    - name: Building block prep
      vars:
        kali_project_folder: '/opt/packerAutoKali/'
      block:

        - name: Making sure build folder exists
          ansible.builtin.file:
            path: '{{ kali_project_folder }}'
            state: directory
            mode: '640'
            owner: root
            group: root

        # when local_only the key's path is relative, but rsync's directory is the
        #   cwd of the playbook, so it breaks because the key is not found
        - name: Setting rsync private key only on local_only
          ansible.builtin.set_fact:
            rsync_private_key: '/src/{{ ansible_ssh_private_key_file }}'
          when:
            - local_only is defined
            - local_only | bool

        - name: Rsync'ing to build server
          ansible.posix.synchronize:
            partial: true
            # directory location inside of dagger container
            #   rsync changes the CWD to the playbook's directory
            src: '/src/'
            dest: '{{ kali_project_folder }}'
            compress: true
            private_key: '{{ rsync_private_key | default("~/.ssh/id_rsa") }}'
